Hydra-Head Engines Plugin
================

Introduction goes here.


Installation Instructions
=======

h3. Prerequisites
* ruby v 1.8.7 or higher
* rubygems
* these ruby gems:
** bundler
** rails version < 3.
* git
* java 1.6 or higher


h3.  Installation Instructions to Run Hydra-Head tests:

0. Make an empty directory, call it whatever you want

Make an empty directory, call it whatever you want, then cd into that directory and clone the hydra-head plugin

<pre>
  mkdir hydra-head-test
  cd hydra-head-test
</pre>

You have to do this because the test host app adds "../../" to its plugin paths, which allows it to load its _parent_ directory as a plugin but will also load all of that parent's sibling directories as plugins as well.  In order to test just the plugin, it must live in a directory all by itself.  This is a hack that will only last until we upgrade to rails3 or find a better hack.

1. Get the hydra-head engines plugin from github

While in your empty hydra-head-test directory

<pre>
git clone git@github.com:projecthydra/hydra-head.git hydra-head
cd hydra-head
</pre>

NOTE:  I believe it *must* be called "hydra-head" and there can't be anything
called "hydra-head" in sibling directories or their children


2. Use bundler to install the gem dependencies.

<pre>
bundle install
</pre>


3. Pull a copy of jetty pre-configured for Hydra with Fedora and Solr installed.
Also pull a rails application set up just for testing the Hydra-Head engines plugin.

<pre>
git submodule init
git submodule update
</pre>

(currently not working.  Try:)

<pre>
  git clone git@github.com:projecthydra/hydra-plugin_test_host.git hydra-plugin_test_host
  git clone git@github.com:projecthydra/hydra-jetty jetty
</pre>


4.  Migrate the databases

You must do this from the testing rails application directory, not from the engine plugin directory

You need to be sure there is nothing else named "hydra-head" approximating an engines plugin in any part of the directory tree with the root node 3 levels up from the testing application.

<pre>
cd hydra-plugin_test_host
rake db:migrate RAILS_ENV=test
rake db:migrate:plugins RAILS_ENV=test
</pre>

or

<pre>
cd hydra-plugin_test_host
rake db:drop RAILS_ENV=test
rake db:migrate:all RAILS_ENV=test
</pre>

Now cd back out of the test host app

<pre>
  cd ../
</pre>

5. Run the bundled copy of Jetty, preloaded with Fedora and Solr applications.

Note that java 1.6 must be invoked by the "java" command or Hydrangea won't work.

You must do this from the engines plugin directory, not from the testing rails application directory.

<pre>
rake hydra:jetty:load
</pre>

This will start up jetty on port 8983.


-6.  Make a symlink in the test rails application to point to the hydra-head engines plugin-

_You shouldn't have to do this if you've cloned the plugin into an empty directory_ -MZ
-cd hydra-plugin_test_host/vendor/plugins-
-ln -s ../../ hydra-head-



7.  Load test fixtures into Fedora/Solr

You must do this at the root of the _plugin_, not within the hydra-plugin_test_host directory

<pre>
rake hydra:default_fixtures:refresh RAILS_ENV=test
</pre>

(TO DO: get rid of irrelevant fixtures; get rid of non-generic fixtures)


8.  Run specs 

You must do this at the root of the _plugin_, not within the hydra-plugin_test_host directory

<pre>
rake hydra_head:rspec
</pre>


Last: Don't forget to stop the jetty server!

You must do this at the root of the _plugin_, not within the hydra-plugin_test_host directory

<pre>
rake hydra:jetty:stop
</pre>

Use ps to ensure the java process has stopped.  If not, kill it manually.


h2. Acknowledgements

h3. Design & Strategic Contributions

The Hydra Framework would not exist without the extensive design effort undertaken by representatives of repository initiatives from Stanford University, University of Virginia and University of Hull.  Contributors to that effort include Tom Cramer, Lynn McRae, Martha Sites, Richard Green, and Chris Awre.  

Thorny Staples from Fedora Commons & DuraSpace deserves special thanks for putting all of these people in the same room together.

h3. Technical Contributions

*Technical Lead:* Matt Zumwalt ("MediaShelf":http://yourmediashelf.com)
*User Interface & User Experience Designer:* Jennifer Vine

Developers:
Eddie Shin, Jessie Keck, Christopher Jesudurai, McClain Looney, Luke Francl, Dan Weinand, Ken Earley, Paul Wenzel, Bess Sadler, Naomi Dushay

Testers:
Charles Kerns, Bess Sadler, Richard Green, Tom Lauderman, Mark Matienzo

h3. Additional thanks

Project Blacklight and the Blacklight contributors
Willy Mene, who created one of the "Hydra head" prototypes on which Hydrangea is based.
Chris Fitzpatrick & Douglas Kim, who created the first version of Solrizer and then thoroughly exercised it.
Stu Snydman, project manager for the SALT Hydra prototype.
